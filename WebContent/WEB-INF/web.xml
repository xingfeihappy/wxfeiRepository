<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<filter>  
        <filter-name>OpenSessionInViewFilter</filter-name>  
        <filter-class>  
                org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>  
        <!-- singleSession默认为true,若设为false则等于没用OpenSessionInView -->  
        <init-param>  
                <param-name>singleSession</param-name>  
                <param-value>true</param-value>  
        </init-param> 
        <init-param> 
        		<param-name>flushMode</param-name> 
   				<param-value>AUTO </param-value>         
        </init-param>  
	</filter>  
    <filter-mapping>  
        <filter-name>OpenSessionInViewFilter</filter-name>  
        <url-pattern>*</url-pattern>  
    </filter-mapping>  
    
	<!-- OSCache缓存首页 -->
 	<jsp-config>
	 	<taglib>
			<taglib-uri>oscache</taglib-uri>
			<taglib-location>/WEB-INF/classes/oscache.tld</taglib-location>
		</taglib>
    </jsp-config> 
    
	<!-- 配置Spring配置文件的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml,
			/WEB-INF/daoContext.xml</param-value>
	</context-param>
	
	<!-- 使用ContextLoaderListener初始化Spring容器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- <listener>
		<listener-class>com.licenseShare.listener.StartUpListener</listener-class>
	</listener> -->
	<!-- OpenSessionInViewFilter 在整个request期间hibernate都可以延迟加载数据 -->
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>      
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>   
		</init-param>
		<init-param>      
	 		<param-name>singleSession</param-name>
	  		<param-value>true</param-value>   
		</init-param>
		<init-param> 
        	<param-name>flushMode</param-name> 
   			<param-value>AUTO</param-value>         
        </init-param> 
	</filter>
	<filter-mapping>
	 	<filter-name>hibernateFilter</filter-name>
	 	<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 定义Struts 2的核心Filter -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<!-- 让Struts 2的核心Filter拦截所有请求 -->
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置会话超时时间 -->
	<session-config>
        <session-timeout>60</session-timeout>
</session-config> 

	<!-- 定义Web应用的首页 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>
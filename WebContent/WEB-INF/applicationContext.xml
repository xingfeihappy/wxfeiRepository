<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<import resource="daoContext.xml" />
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码 连接池最大连接数、最小连接数、初始连接数等参数 --><!-- 10.65.7.155 cloud*2015-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost/restaurantmanagesystem?useUnicode=true&amp;characterEncoding=UTF-8"
		p:user="root" p:password="123456" p:maxPoolSize="50" p:minPoolSize="1"
		p:initialPoolSize="1" p:maxIdleTime="1800" p:idleConnectionTestPeriod="1800"
		p:acquireRetryAttempts="30" p:breakAfterAcquireFailure="true"
		p:testConnectionOnCheckout="false" />


	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource ,把数据源注入给Session工	厂-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>com/projection/domain/User.hbm.xml</value>
				<value>com/projection/domain/Dishes.hbm.xml</value>
				<value>com/projection/domain/Message.hbm.xml</value>
				<value>com/projection/domain/Order.hbm.xml</value>
				<value>com/projection/domain/Orderdetail.hbm.xml</value>
				<value>com/projection/domain/Seat.hbm.xml</value>
				<value>com/projection/domain/Log.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表 是否生成SQL语句等 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=none
				hibernate.show_sql=false
				hibernate.format_sql=true
				hibernate.autoReconnect=true
				#开启二级缓存
				hibernate.cache.use_second_level_cache=true
				#设置二级缓存的提供者
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
			</value>
		</property>
	</bean>

	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<!-- 定义访问点，为save、deleted、update开头的方法注册事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- 面向切面编程 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allManagerMethod"
			expression="execution(* com.projection.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" />
	</aop:config>
	<!-- 定义业务逻辑组件 模板 -->
	<!-- 为之注入DAO组件 -->
	<bean id="serviceTemplate" abstract="true" lazy-init="true"
		p:dishesDao-ref="dishesDao" p:messageDao-ref="messageDao"
		p:orderDao-ref="orderDao"
		p:orderdetailDao-ref="orderdetailDao" p:seatDao-ref="seatDao"
		p:userDao-ref="userDao" p:logDao-ref="logDao"/>

    <bean id="userService" name="userService"
		class="com.projection.service.UserService" parent="serviceTemplate" />
    
	<bean id="dishesService" name="dishesService"
		class="com.projection.service.DishesService" parent="serviceTemplate" />
	
	<bean id="orderService" name="orderService"
		class="com.projection.service.OrderService" parent="serviceTemplate" />
	
	<bean id="orderdetailService" name="orderdetailService"
		class="com.projection.service.OrderDetailService" parent="serviceTemplate" />
	
	<bean id="messageService" name="messageService"
		class="com.projection.service.MessageService" parent="serviceTemplate" />
	
	<bean id="seatService" name="seatService"
		class="com.projection.service.SeatService" parent="serviceTemplate" />
	
	<bean id="logService" name="logService"
		class="com.projection.service.LogService" parent="serviceTemplate" />
</beans>
		